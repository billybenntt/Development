{"_id":"note:FsZxY1c4VG","title":"2. Derived State","content":"\n\n\n## Derived State\n\n![](image-l6u2t1i6.png)\n\n\n## Parent Component\n\n```jsx \nexport default function App() {\n    \n    const [squares, setSquares] = React.useState(boxes)\n    \n   // State Changing Function\n    function toggle(prop) {\n        const newState = squares.map(obj => {\n            if(obj.id === prop.id){\n             // return Modified object or Original                 \n              return {...obj, on: !prop.on}\n            } \n           return obj\n        })\n    // Pass Updated State\n       setSquares(newState)\n    }\n    \n   //  Generate all Elements\n    const squareElements = squares.map(square => (\n        <Box \n           <!--Pass Properties -->\n            key={square.id} \n            id={square.id}\n            on={square.on} \n           <!-- Pass Event Trigger-->\n            toggle={toggle}\n        />\n    ))\n    \n    return (\n        <main>\n        <!-- Render All Elements-->\n            {squareElements}\n        </main>\n    )\n}\n```\n\n#### Rewrite Compact\n```jsx\n//   Directly Update State \n    function toggle(prop) {\n        setCurrent(prevState => {\n            return prevState.map(obj => {\n                    return obj.id === prop.id ? {...obj, on: !prop.on} : obj\n                }\n            )\n        })\n    }\n```\n\n## Child Component\n\n```jsx \nexport default function Box(props) {\n    const styles = {\n        backgroundColor: props.on ? \"#222222\" : \"transparent\"\n    }\n    \n    return (\n        <div \n            style={styles} \n            className=\"box\"\n         <!--  To accept parameters use anonymous function  -->\n            onClick={()=>props.toggle(props)}\n        >\n        </div>\n    )\n}\n```\n\n\nhttps://bobbyhadz.com/blog/react-update-object-in-array\n\n\n","tags":[],"folderPathname":"/ðŸ“˜ FrontEnd/REACT/State","data":{},"createdAt":"2022-08-15T01:26:31.742Z","updatedAt":"2022-08-15T02:27:25.742Z","trashed":false,"_rev":"fm3M3ji6L"}