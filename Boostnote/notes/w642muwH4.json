{"_id":"note:w642muwH4","title":"Promises","content":"\n\n\n### Constructing a Promise Object\n\n```js\n\n// Promise Creation\nconst executorFunction = (resolve,reject) => {\n\n}\n\n// Pass Executor function to Promise Object\n\nconst myFirstPromise = new Promise(executorFunction);\n\n```\n\n\n\n\n\n\n\n\n### Constructing a Promise Object\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Handle a Fulfilled Promise with then (Answer)\n\n\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to true to represent a successful response from a server\n  let responseFromServer = true;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\n```\n\n\n\n\n### Handle A Rejected Promise With Catch\n\n```js\nconst makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});\n```\n\n\n","tags":[],"folderPathname":"/ðŸ“— BackEnd/JAVASCRIPT ES6","data":{},"createdAt":"2021-04-15T04:52:53.792Z","updatedAt":"2022-07-07T06:15:30.127Z","trashed":false,"_rev":"Iuqwpbrmq"}