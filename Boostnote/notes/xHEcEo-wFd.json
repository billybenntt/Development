{"_id":"note:xHEcEo-wFd","title":"Controlled Component","content":"### Controlled Component\n\n- React Control form element\n- the name attribute gets sent inside the event and must match the initial state object\n- the value attribute gets sent inside the event\n\n\n```jsx \nimport React from \"react\";\n\nfunction App() {\n\n    // Initialize State for Multiple Fields using Object\n    const [formData, setFormData] = React.useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        comments: \"\",\n        isFilled: true,\n        option: \"\",\n        favColor: \"\"\n    })\n\n    // Log Current State\n    // console.log(formData)\n\n\n    // Pass the Event Parameter\n    const showStuff = (e) => {\n\n        // Destructuring the Properties into variables\n        const {type, value, name, checked} = e.target\n\n        setFormData(prevState => {\n            // Standard update object notation\n            return {\n                ...prevState,\n                // Use Bracket Notation to modify changing variables\n                [name]: type === 'checkbox' ? checked : value\n            }\n        })\n    }\n\n\n    const handleSubmit = (e) => {\n        // Prevent default - prevent page to reload and wipe data always do this\n        e.preventDefault()\n        console.log(\"prevented default\")\n        console.log(formData)\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>This is a Form</h2>\n\n            {/* This event handler watches for the form submit when the button is clicked*/}\n            <form onSubmit={handleSubmit}>\n\n\n                {/*------------------ Text Based Inputs ------------------*/}\n\n\n                {/* Use name attribute to refer to object and pass event listener when input changes*/}\n                {/* When using the Value Attribute it will become a controlled input*/}\n                <label>Name</label>\n                <input type=\"text\" name=\"firstName\" onChange={showStuff} value={formData.firstName}/>\n                <label>LastName</label>\n                <input type=\"text\" name=\"lastName\" onChange={showStuff} value={formData.lastName}/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={showStuff} value={formData.email}/>\n\n\n                {/*------------------ Text Area Inputs ------------------*/}\n                {/* Text area in React can be self-closing*/}\n                <label>Comments</label>\n                <textarea name=\"comments\" onChange={showStuff} value={formData.comments}/>\n\n\n                {/*------------------ Checkbox Inputs ------------------*/}\n\n                {/*There is only Checked Attribute on checkbox rather than value*/}\n                <label htmlFor=\"isFilled\">Are you crazy?</label>\n                <input type=\"checkbox\" name=\"isFilled\" id=\"isFilled\" onChange={showStuff} checked={formData.isFilled}/>\n\n\n                {/*------------------ Radio Inputs ------------------*/}\n                {/* The name attribute makes them mutually exclusive */}\n                {/*Checked works as the controlled component just like the checkboxes*/}\n                {/* the name should match exactly the checked object otherwise won't work*/}\n                <fieldset>\n                    <legend>Radio Inputs</legend>\n                    <label>Benchod</label>\n                    <input type=\"radio\" name=\"option\" onChange={showStuff} value=\"benchod-1\"\n                           checked={formData.option === \"benchod-1\"}/>\n                    <label>You Bloody 2</label>\n                    <input type=\"radio\" name=\"option\" onChange={showStuff} value=\"benchod-2\"\n                           checked={formData.option === \"benchod-2\"}/>\n                    <label>You Blastard 3</label>\n                    <input type=\"radio\" name=\"option\" onChange={showStuff} value=\"benchod-3\"\n                           checked={formData.option === \"benchod-3\"}/>\n                </fieldset>\n\n\n                {/*------------------ Select Option Inputs ------------------*/}\n                {/*Instead of using Selected on each option, the controlled stated is declared in the root <select>*/}\n                <fieldset>\n                    <legend>Favorite Color</legend>\n                    <label htmlFor=\"favColor\">Color Selector </label>\n                    <select id=\"favColor\" name=\"favColor\" onChange={showStuff} value={formData.favColor}>\n                        <option value=\"\">-Select Color-</option>\n                        <option value=\"red\">Red</option>\n                        <option value=\"yellow\">Yellow</option>\n                        <option value=\"blue\">Blue</option>\n                        <option value=\"orange\">Orange</option>\n                    </select>\n                </fieldset>\n\n\n                {/*------------------ Submit button ------------------*/}\n                {/*The button tag can be used instead of the input type submit and the value is declared within tags*/}\n                {/*The button tag default value is submit*/}\n                <button disabled>Add Blog</button>\n            </form>\n\n\n        </div>)\n}\n\nexport default App\n\n\n\n```","tags":[],"folderPathname":"/React/Forms","data":{},"createdAt":"2022-08-16T02:42:56.729Z","updatedAt":"2022-08-19T07:43:01.039Z","trashed":false,"_rev":"c4FDOAP_l"}