{"_id":"note:4_9W18WDUh","title":"3. Traversing","content":"\n\n## Select Parent Node\n```js\n//  Select target Element\nconst targetElement = document.getElementsByClassName(\"list-group-item\")[0]\n\n// Refer to its parent Node\ntargetElement.parentNode\n```\n\n### Difference between parentNode and parentElement\n\n- The only difference is that, the `parentElement` property can be null if the parent node is not an element node\n\n- The property `parentNode` is more commonly used when traversing the DOM but you have to skip indexes because identation is counted in the DOM tree.\n- Properties ending in `node` usually return a rather than a HTML collection\n```js \n// Show HTML Element\nconsole.log(\"Parent Node of HTML\")\nconst html = document.documentElement\nconsole.log(html)\n\n// Returns the document Object\nconsole.log(html.parentNode)\n\n// Returns Null since the document Object is not an element\nconsole.log(html.parentElement)\n```\n\n[Reference](https://thisthat.dev/parent-element-vs-parent-node/)\n\n\n### child vs childrenNodes\n- `child ` returns an HTML collection whereas `childrenNodes` return a NodeList, node list contain identation nodes.","tags":[],"folderPathname":"/ðŸ“˜ FrontEnd/DOM","data":{},"createdAt":"2021-12-30T07:37:11.027Z","updatedAt":"2022-08-24T01:59:11.690Z","trashed":false,"_rev":"RI-QnAeeZ"}