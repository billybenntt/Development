{"_id":"note:gQ0hMPVXOp","title":"Sets","content":"# Sets\n\n- Sets are unordered\n- Sets cannot have dups\n- Sets cannot be indexed, sliced\n- Sets use `{squiggly}` brackets \n- Faster than a list in terms of finding stuff x100\n\n\n### Remove Duplicates\n\n```python\n# Initial List\nletters = [\"a\", \"b\", \"d\", \"e\", \"a\", \"b\", \"b\", \"c\", \"d\"]\n\n# Convert to Set \nletters = set(letters)\n# {'e', 'a', 'b', 'd', 'c'}\n\n# Convert Back to list\nletters = list(letters)\n# ['e', 'a', 'b', 'd', 'c']\n\n# Sort the items\nletters.sort()\n# ['a', 'b', 'c', 'd', 'e']\n```\n\n### Membership Test\n\n```python\n# Check if ‘Eric’ and ‘John’ exist in friends\nfriends_there = \"Eric\" in friends_set1 and \"John\" in friends_set1\nprint(friends_there)\n# True\n```\n\n\n\n### Find intersections, unions, difference and symetric difference.\n\n\n\n:::tip\n- Can use method or operator to perform action\n:::\n\n- Intersection (A & B)\n- Union (A | B)\n- Difference (A - B)\n- Symetric Difference (A ^B)\n\n![](image-l8y118ea.png)\n![](image-l8y8yuk3.png)\n\n```python \nfriend_set_1 = {'John', 'Michael', 'Terry', 'Eric', 'Graham', 'Eric'}\nfriend_set_2 = {'Reg', 'Loretta', 'Colin', 'Eric', 'Graham'}\n\n# Find Intersection (A & B) / Shared Elements between A and B\nprint(friend_set_1.intersection(friend_set_2))\nprint(friends_set1 & friends_set2)\n\n# Find Union  (A | B) / All Unique Elements between A and B\nprint(friend_set_1.union(friend_set_2))\nprint(friends_set1 | friends_set2)\n\n# Find Difference (A - B) / Unique Elements from A not in B\nprint(friend_set_1.difference(friend_set_2))\nprint(friends_set1 - friends_set2)\n```\n\n\n","tags":[],"folderPathname":"/Python/Arrays","data":{},"createdAt":"2022-10-07T05:06:12.939Z","updatedAt":"2022-10-07T08:53:03.212Z","trashed":false,"_rev":"9Rkmnkoul"}