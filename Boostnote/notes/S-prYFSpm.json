{"_id":"note:S-prYFSpm","title":"Objects","content":"\n\n#### Basic Object\n```js\n// Raw Object\nconst bird = {\n  name: \"Albert\",\n  color: \"blue\",\n  numLegs: 2,\n};\n```\n#### Access Object Properties\n\n```js\n// Using dot notation\nbird.name\n\n// Using square notation (Good for Variables)\nbird[\"name\"]\n```\n\n\n\n\n#### Method Declaration\n\n\n\n```js  \nconst bird = {\n    // Properties\n    name: 'bob',\n    age: 3,\n    email: 'bob@gmail.com',\n    aliases: ['pest', 'rat', 'pigeon'],\n\n    // Method Declaration 1\n    poop1: function () {\n        console.log(\"poop1\");\n    },\n    \n   poop2: function () {\n        console.log(\"poop12);\n    }\n````\n#### this Keyword\n\n\n:::note\n* Inside an object method with arrow functions there are no binding of this.\n* if the method uses a conventional function this keyword will be used within the object scope\n:::\n\n```js  \nconst bird = {\n     // Method Declaration 3 arrow function\n    poop3: () => {\n        console.log(this.name);\n    },\n    // Method Declaration 4 regular function \n    poop4: function () {\n        console.log(this.name);\n    }\n }   \n\n// Will refer to the window object\nbird.poop3()\n\n// Will refer to the bird object\nbird.poop4()\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\n\n## Basic Object Syntax\n```js\n\n// Object Constructor Function\nfunction Bird(name, color) {\n  this.color = color;\n  this.numLegs = 2;\n  this.name = name;\n}\n\n\n\n// Creating Object from Constructor\n\nlet pidgeon = new Bird(\"Michael\", \"Blue\");\n\n// Access Properties\nconsole.log(pidgeon.name);\nconsole.log(pidgeon.color);\n\n// Override Property\npidgeon.name = \"Carlos\";\nconsole.log(pidgeon.name);\n\n// Create new Property\npidgeon.age = 12;\nconsole.log(pidgeon.age);\n```\n\n\n\n## Object Property Shorthand\n```js\n// Original Way\nconst createPerson = (name, age, gender) => {\n  return {\n    name: name,\n    age: age,\n    gender: gender\n  };\n};\n// Improved Way\nconst createPerson = (name, age, gender) => {\n  return {\n    name,age,gender\n  };\n};\n```\n\n\n\n## Creating Object Constructor with Methods\n```js\n\nvar Person = function (firstAndLast) {\n  // Hidden Variable\n  let fullName = firstAndLast.split(\" \");\n\n  // Set Full Name\n  this.setFullName = function (firstAndLast) {\n    fullName[0] = firstAndLast.split(\" \")[0];\n    fullName[1] = firstAndLast.split(\" \")[1];\n  };\n  // Set First Name\n  this.setFirstName = function (firstName) {\n    fullName[0] = firstName;\n  };\n  // Set Last Name\n  this.setLastName = function (lastName) {\n    fullName[1] = lastName;\n  };\n\n  // Get Full Name\n  this.getFullName = function () {\n    return fullName[0] + \" \" + fullName[1];\n  };\n  // Get First Name\n  this.getFirstName = function () {\n    return fullName[0];\n  };\n  // Get Last Name\n  this.getLastName = function () {\n    return fullName[1];\n  };\n};\n```\n\n\n\n","tags":[],"folderPathname":"/ðŸ“— BackEnd/JAVASCRIPT ES6","data":{},"createdAt":"2021-03-03T14:00:56.275Z","updatedAt":"2022-06-16T05:12:03.495Z","trashed":false,"_rev":"UEGvNzDtO"}